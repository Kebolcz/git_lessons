/*
*	http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000
*	liaoxuefeng --> github
*/




git init 
git config --global user.name "kebolcz"
git config --global user.email "07_master@sina.com"
git commit --amend --reset-author
git add <file>
git commit -m "Initial a first commit!"
git status
git diff <file>                  //show difference between workspace and stage
git log				
git log --pretty=oneline
git reset --hard HEAD^		//reset to the last version
git reset --hard HEAD~100	//reset to the 100
git reset --hard <SHA1>		//reset to a specific version
git reflog			//show all history commandline that U input
git diff HEAD -- ./readme.text	//show difference between HEAD and workspace
git checkout -- ./readme.text    //make this file back to the lastest version of "git commit" or "git add"
git reset HEAD -- ./readme.text  //reset changes from stage to workspace . Unstage. workspace still maintain the changes.
git rm          		 //remove a file.



//url:http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013752340242354807e192f02a44359908df8a5643103a000

Create SSH
	
	ssh-keygen -t rsa -C "07_master@sina.com"   //url:root/.ssh

Then add public key on github homepage Account SSH Key

Then create a new repository.

git remote add origin https://github.com/Kebolcz/git_lessons.git
git push -u origin master

Then the next time u want to push local repo,use    git push origin master

Branch -------------------------------------------------------------------------->
	git checkout -b dev    
equals   
	git branch dev        git checkout dev


git branch   //show branchs

git merge dev //merge branch"dev" to this branch

git branch -d dev  	//delete branch dev

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

confix branch------------------------------------------------------------------>

git checkout -b feature    //create a new branch is simple & quick.

git log --graph --pretty=oneline --abbrev-commit

merge branch------------------------------------------------------------------->
git merge --no-ff -m "merge with --no-ff" dev  (HEAD->master)

Stash-------------------------------------------------------------------------->

git stash            //把当前工作现场“储藏”起来，等以后恢复现场后继续工作

git status          //用git status查看工作区，就是干净的

...................after do something ,you back...........

git stash list 

git stash apply     git stash drop

git stash pop stash@{0}
